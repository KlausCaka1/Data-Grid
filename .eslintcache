[{"C:\\Users\\test\\my-app\\src\\index.js":"1","C:\\Users\\test\\my-app\\src\\App.js":"2","C:\\Users\\test\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\test\\my-app\\src\\dataGrid\\dataGrid.js":"4","C:\\Users\\test\\my-app\\src\\modal\\AddNewJob.js":"5","C:\\Users\\test\\my-app\\src\\modal\\Autosuggest.js":"6","C:\\Users\\test\\my-app\\src\\Cards.js":"7","C:\\Users\\test\\my-app\\src\\dataGrid\\agTable.js":"8"},{"size":500,"mtime":1608123330401,"results":"9","hashOfConfig":"10"},{"size":3763,"mtime":1610472834021,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608123330401,"results":"12","hashOfConfig":"10"},{"size":979,"mtime":1610481609566,"results":"13","hashOfConfig":"10"},{"size":1807,"mtime":1610470856288,"results":"14","hashOfConfig":"10"},{"size":2130,"mtime":1610470859070,"results":"15","hashOfConfig":"10"},{"size":2673,"mtime":1610474471191,"results":"16","hashOfConfig":"10"},{"size":3199,"mtime":1610482843651,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xl5cf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\test\\my-app\\src\\index.js",[],["36","37"],"C:\\Users\\test\\my-app\\src\\App.js",["38"],"import './App.css';\nimport React, {Component} from 'react';\nimport AddNewJob from \"./modal/AddNewJob\";\nimport Cards from \"./Cards\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useLocation,\n    Redirect\n  } from \"react-router-dom\";\nimport Table from './dataGrid/dataGrid.js';\n\nvar categories = [\n    {\n      name: 'Shoring',\n  \n    },\n    {\n      name: 'System Scaffold',\n    },\n    {\n        name: 'Shed'\n    },\n    {\n        name: 'Pipeline'\n    }\n];\n\nconst categories__backup = [\n    {\n        name: 'Shoring',\n    \n      },\n      {\n        name: 'System Scaffold',\n      },\n      {\n          name: 'Shed'\n      },\n      {\n          name: 'Pipeline'\n      } \n]\n\nconst NoCards = () => {\n    return (\n        <div className=\"cards\">\n            No Cards\n        </div>\n    )\n}\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\nclass App extends Component {\n    state = {\n        showModal: false,\n        cards: [],\n        name: '',\n        category: '',\n        categories: [],\n        pm: 'none'\n    }\n\n    setName = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    setCategory = (event, {suggestionValue, suggestion}) => {\n        this.setState({\n            categories: [\n                ...this.state.categories,\n                {\n                    name: suggestionValue,\n                    \n                },\n            ],\n        });\n        categories.splice(categories.indexOf(suggestion), 1)\n    }\n\n    setPM = (event) => {\n        this.setState({pm: event.target.value})\n    }\n\n    saveModal = () => {\n        this.setState({\n            showModal: !this.state.showModal,\n            cards: [...this.state.cards,\n                {\n                    job_site_name: this.state.name,\n                    categories: this.state.categories,\n                    pm: this.state.pm\n                }\n            ],\n            name: '',\n            categories: [],\n            pm: 'none',\n        });\n        categories = categories__backup\n    }\n\n\n    render() {\n\n\n        return (\n            <div className=\"container\">\n                <headr className=\"header\">\n                    <span>INVENTORY</span>\n                    <button className=\"header__button\">Logout</button>\n                </headr>\n                {this.state.showModal ?\n                    <AddNewJob\n                        setCategory={this.setCategory}\n                        setPM={this.setPM}\n                        setName={this.setName}\n                        categories={categories}\n                        selectedCategories={this.state.categories}\n                        save={this.saveModal}/> :\n                        <Router className=\"body\">\n                            <nav>\n                            </nav>\n                        <Switch>\n                            <Route exact  path='/' render={() => <Redirect to=\"/cards\"/>}>\n                            </Route>\n                            <Route exact  path='/cards'>\n                                <div className=\"body\">\n                                    {this.state.cards.length > 0 ? <Cards cards={this.state.cards}/> : <NoCards/>}\n                                    <button className=\"button\" onClick={() => this.setState({showModal: !this.state.showModal})}>\n                                        Create\n                                    </button>\n                                </div>\n                            </Route>\n                            \n                            <Route exact  path='/table' component={Table}>\n                            </Route>\n                        </Switch>\n                    </Router>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","C:\\Users\\test\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\test\\my-app\\src\\dataGrid\\dataGrid.js",[],"C:\\Users\\test\\my-app\\src\\modal\\AddNewJob.js",[],"C:\\Users\\test\\my-app\\src\\modal\\Autosuggest.js",[],"C:\\Users\\test\\my-app\\src\\Cards.js",[],"C:\\Users\\test\\my-app\\src\\dataGrid\\agTable.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":54,"column":10,"nodeType":"47","messageId":"48","endLine":54,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":12,"column":10,"nodeType":"47","messageId":"48","endLine":12,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":14,"column":19,"nodeType":"47","messageId":"48","endLine":14,"endColumn":29},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'gridColumnApi' is assigned a value but never used.","'setRowData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]